plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.2'
    id 'io.spring.dependency-management' version '1.1.2'
}

group = 'br.com.spedison'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Bibliotecas do SpringBoot
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    // Esse projeto suporta 4 bancos de dados: H2, Oracle, MariaDB e PostgreSQL
    runtimeOnly 'com.oracle.database.jdbc:ojdbc8'
    runtimeOnly 'org.postgresql:postgresql'
    runtimeOnly 'com.h2database:h2'
    implementation 'org.mariadb.jdbc:mariadb-java-client:3.1.4'
    // Libs usadas nos testes
    testAnnotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
    // Mostra as vairi√°veis antes dos testes.
    def k = System.getenv()
    for (t : k){
        println("Chave " + t.key + " com valor :: " + t.value)
    }
    useJUnitPlatform()
}